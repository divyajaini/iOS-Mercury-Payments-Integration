/*
	MercurywsExample.m
	Provides example and test runs the service's proxy methods.
	Generated by SudzC.com
*/
#import "MercurywsExample.h"
#import "Mercuryws.h"

@implementation MercurywsExample

- (void)run {
	// Create the service
	Mercuryws* service = [Mercuryws service];
	service.logging = YES;
	// service.username = @"username";
	// service.password = @"password";
	

	// Returns BOOL. 
	[service AllowRunAsDebit:self action:@selector(AllowRunAsDebitHandler:) merchant: @"" pw: @"" account: @""];

	// Returns BOOL. 
	[service AssociateAccount:self action:@selector(AssociateAccountHandler:) account: @"" identifier: @"" merchantid: @"" memo: @"" pw: @""];

	// Returns NSString*. 
	[service CAllDetail:self action:@selector(CAllDetailHandler:) merchant: @"" pw: @"" invoice: @"" startdate: @"" enddate: @""];

	// Returns NSString*. 
	[service CAllDetailEx:self action:@selector(CAllDetailExHandler:) merchant: @"" pw: @"" invoice: @"" startdate: @"" enddate: @"" transactioncode: @""];

	// Returns NSString*. 
	[service CAllGiftDetail:self action:@selector(CAllGiftDetailHandler:) merchant: @"" pw: @"" invoice: @"" startdate: @"" enddate: @""];

	// Returns CXMLNode*. 
	[service CBatch:self action:@selector(CBatchHandler:) merchant: @""];

	// Returns NSString*. 
	[service CTranDetail:self action:@selector(CTranDetailHandler:) merchant: @"" pw: @"" invoice: @""];

	// Returns NSString*. 
	[service CreditTransaction:self action:@selector(CreditTransactionHandler:) tran: @"" pw: @""];

	// Returns NSString*. 
	[service GiftTransaction:self action:@selector(GiftTransactionHandler:) tran: @"" pw: @""];

	// Returns NSString*. 
	[service Lookup:self action:@selector(LookupHandler:) tran: @"" pw: @""];

	// Returns NSString*. 
	[service LoyaltyTransaction:self action:@selector(LoyaltyTransactionHandler:) tran: @"" pw: @""];

	// Returns BOOL. 
	[service RemoveAccountAssociation:self action:@selector(RemoveAccountAssociationHandler:) account: @"" identifier: @"" merchantid: @"" pw: @""];
}

	

// Handle the response from AllowRunAsDebit.
		
- (void) AllowRunAsDebitHandler: (BOOL) value {
			

	// Do something with the BOOL result
		
	NSLog(@"AllowRunAsDebit returned the value: %@", [NSNumber numberWithBool:value]);
			
}
	

// Handle the response from AssociateAccount.
		
- (void) AssociateAccountHandler: (BOOL) value {
			

	// Do something with the BOOL result
		
	NSLog(@"AssociateAccount returned the value: %@", [NSNumber numberWithBool:value]);
			
}
	

// Handle the response from CAllDetail.
		
- (void) CAllDetailHandler: (id) value {

	// Handle errors
	if([value isKindOfClass:[NSError class]]) {
		NSLog(@"%@", value);
		return;
	}

	// Handle faults
	if([value isKindOfClass:[SoapFault class]]) {
		NSLog(@"%@", value);
		return;
	}				
			

	// Do something with the NSString* result
		NSString* result = (NSString*)value;
	NSLog(@"CAllDetail returned the value: %@", result);
			
}
	

// Handle the response from CAllDetailEx.
		
- (void) CAllDetailExHandler: (id) value {

	// Handle errors
	if([value isKindOfClass:[NSError class]]) {
		NSLog(@"%@", value);
		return;
	}

	// Handle faults
	if([value isKindOfClass:[SoapFault class]]) {
		NSLog(@"%@", value);
		return;
	}				
			

	// Do something with the NSString* result
		NSString* result = (NSString*)value;
	NSLog(@"CAllDetailEx returned the value: %@", result);
			
}
	

// Handle the response from CAllGiftDetail.
		
- (void) CAllGiftDetailHandler: (id) value {

	// Handle errors
	if([value isKindOfClass:[NSError class]]) {
		NSLog(@"%@", value);
		return;
	}

	// Handle faults
	if([value isKindOfClass:[SoapFault class]]) {
		NSLog(@"%@", value);
		return;
	}				
			

	// Do something with the NSString* result
		NSString* result = (NSString*)value;
	NSLog(@"CAllGiftDetail returned the value: %@", result);
			
}
	

// Handle the response from CBatch.
		
- (void) CBatchHandler: (id) value {

	// Handle errors
	if([value isKindOfClass:[NSError class]]) {
		NSLog(@"%@", value);
		return;
	}

	// Handle faults
	if([value isKindOfClass:[SoapFault class]]) {
		NSLog(@"%@", value);
		return;
	}				
			

	// Do something with the CXMLNode* result
		CXMLNode* result = (CXMLNode*)value;
	NSLog(@"CBatch returned the value: %@", result);
			
}
	

// Handle the response from CTranDetail.
		
- (void) CTranDetailHandler: (id) value {

	// Handle errors
	if([value isKindOfClass:[NSError class]]) {
		NSLog(@"%@", value);
		return;
	}

	// Handle faults
	if([value isKindOfClass:[SoapFault class]]) {
		NSLog(@"%@", value);
		return;
	}				
			

	// Do something with the NSString* result
		NSString* result = (NSString*)value;
	NSLog(@"CTranDetail returned the value: %@", result);
			
}
	

// Handle the response from CreditTransaction.
		
- (void) CreditTransactionHandler: (id) value {

	// Handle errors
	if([value isKindOfClass:[NSError class]]) {
		NSLog(@"%@", value);
		return;
	}

	// Handle faults
	if([value isKindOfClass:[SoapFault class]]) {
		NSLog(@"%@", value);
		return;
	}				
			

	// Do something with the NSString* result
		NSString* result = (NSString*)value;
	NSLog(@"CreditTransaction returned the value: %@", result);
			
}
	

// Handle the response from GiftTransaction.
		
- (void) GiftTransactionHandler: (id) value {

	// Handle errors
	if([value isKindOfClass:[NSError class]]) {
		NSLog(@"%@", value);
		return;
	}

	// Handle faults
	if([value isKindOfClass:[SoapFault class]]) {
		NSLog(@"%@", value);
		return;
	}				
			

	// Do something with the NSString* result
		NSString* result = (NSString*)value;
	NSLog(@"GiftTransaction returned the value: %@", result);
			
}
	

// Handle the response from Lookup.
		
- (void) LookupHandler: (id) value {

	// Handle errors
	if([value isKindOfClass:[NSError class]]) {
		NSLog(@"%@", value);
		return;
	}

	// Handle faults
	if([value isKindOfClass:[SoapFault class]]) {
		NSLog(@"%@", value);
		return;
	}				
			

	// Do something with the NSString* result
		NSString* result = (NSString*)value;
	NSLog(@"Lookup returned the value: %@", result);
			
}
	

// Handle the response from LoyaltyTransaction.
		
- (void) LoyaltyTransactionHandler: (id) value {

	// Handle errors
	if([value isKindOfClass:[NSError class]]) {
		NSLog(@"%@", value);
		return;
	}

	// Handle faults
	if([value isKindOfClass:[SoapFault class]]) {
		NSLog(@"%@", value);
		return;
	}				
			

	// Do something with the NSString* result
		NSString* result = (NSString*)value;
	NSLog(@"LoyaltyTransaction returned the value: %@", result);
			
}
	

// Handle the response from RemoveAccountAssociation.
		
- (void) RemoveAccountAssociationHandler: (BOOL) value {
			

	// Do something with the BOOL result
		
	NSLog(@"RemoveAccountAssociation returned the value: %@", [NSNumber numberWithBool:value]);
			
}
	

@end
		